AWSTemplateFormatVersion: 2010-09-09


Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id
  
Resources:

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0bf0565838358789b # Amazon Linux 2 LTS Arm64 AMI 2.0.20230119.1 arm64 HVM gp2 
      InstanceType: t4g.small
      KeyName: just-a-db
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: just-a-db

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: just-a-db security group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0

  BackupsLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: just-a-db-backups
      Handler: src.app.handler
      Role: !Ref BackupsLambdaRole
      LogGroup: !Ref BackupsLambdaLogGroup
      Code:
        ZipFile: |
          # this code will be replaced after, it is just to create de lambda function
          def main(event, context):
            print("empty lambda function")

  BackupsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: just-a-db-backups-lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Policies:
          - PolicyName: just-a-db-backups-lambda-policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action: 
                    - s3:PutObject
                    - s3:GetObject
                  Resource: !Ref ResourcesBucket

  BackupsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: just-a-db/backups-logs
      RetentionInDays: 10

  DatabaseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: just-a-db/database-logs
      RetentionInDays: 10

  BackupsLambdaCron:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 1 * * ? *)
      Targets:
        - Arn: !Ref BackupsLambda
          Id: BackupsLambdaTarget

  BackupsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BackupsLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BackupsLambdaCron.Arn

  ResourcesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: just-a-db-backups

